apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'spring-boot'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.7.RELEASE")
    }
}

//Configures the classpath and the source and resource directories
//of the integrationTest task.
sourceSets {
    //Declaring this source set creates compile time and runtime configurations for it.
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

test {
    testLogging {
        showStandardStreams = true
    }
}

//Configures the compile and runtime configurations for our integration tests
//and includes the dependencies of the test task.
configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    testCompile 'com.jayway.restassured:rest-assured:2.7.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    //TODO: integrationTestCompile
    testCompile 'info.cukes:cucumber-junit:1.2.4'
    testCompile 'info.cukes:cucumber-java:1.2.4'
}

//Create the task that runs the integration tests found from the
//configured source directory and uses the correct classpath.
task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    //If you want to ensure that integration tests are run every time when you invoke
    //this task, uncomment the following line.
    outputs.upToDateWhen { false }
}

//Ensure that the check task fails the build if there are failing integration tests.
check.dependsOn integrationTest
//Ensure that our unit tests are run before our integration tests
integrationTest.mustRunAfter test

//Ensure that the HTML reports of unit and integration tests are written to different directories.
tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

mainClassName = 'blog.EntryPoint'